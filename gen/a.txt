/* BEGIN: Gen by geninstable.py */
INIT_INS(LDA,XIDIRADDR,0xa1);	//LDA ($xx, X) 0xa1 2 XIDIRADDR
INIT_INS(LDA,ZPADDR,0xa5);	//LDA $xx 0xa5 2 ZPADDR
INIT_INS(LDA,BYTE,0xa9);	//LDA #$xx 0xa9 2 BYTE
INIT_INS(LDA,ADDR,0xad);	//LDA $xxxx 0xad 3 ADDR
INIT_INS(LDA,YIDIRADDR,0xb1);	//LDA ($xx), Y 0xb1 2 YIDIRADDR
INIT_INS(LDA,XZPADDR,0xb5);	//LDA $xx, X 0xb5 2 XZPADDR
INIT_INS(LDA,YADDR,0xb9);	//LDA $xxxx, Y 0xb9 3 YADDR
INIT_INS(LDA,XADDR,0xbd);	//LDA $xxxx, X 0xbd 3 XADDR
INIT_INS(LDX,BYTE,0xa2);	//LDX #$xx 0xa2 2 BYTE
INIT_INS(LDX,ZPADDR,0xa6);	//LDX $xx 0xa6 2 ZPADDR
INIT_INS(LDX,ADDR,0xae);	//LDX $xxxx 0xae 3 ADDR
INIT_INS(LDX,YZPADDR,0xb6);	//LDX $xx, Y 0xb6 2 YZPADDR
INIT_INS(LDX,YADDR,0xbe);	//LDX $xxxx, Y 0xbe 3 YADDR
INIT_INS(LDY,BYTE,0xa0);	//LDY #$xx 0xa0 2 BYTE
INIT_INS(LDY,ZPADDR,0xa4);	//LDY $xx 0xa4 2 ZPADDR
INIT_INS(LDY,ADDR,0xac);	//LDY $xxxx 0xac 3 ADDR
INIT_INS(LDY,XZPADDR,0xb4);	//LDY $xx, X 0xb4 2 XZPADDR
INIT_INS(LDY,XADDR,0xbc);	//LDY $xxxx, X 0xbc 3 XADDR
INIT_INS(STA,XIDIRADDR,0x81);	//STA ($xx, X) 0x81 2 XIDIRADDR
INIT_INS(STA,ZPADDR,0x85);	//STA $xx 0x85 2 ZPADDR
INIT_INS(STA,ADDR,0x8d);	//STA $xxxx 0x8d 3 ADDR
INIT_INS(STA,YIDIRADDR,0x91);	//STA ($xx), Y 0x91 2 YIDIRADDR
INIT_INS(STA,XZPADDR,0x95);	//STA $xx, X 0x95 2 XZPADDR
INIT_INS(STA,YADDR,0x99);	//STA $xxxx, Y 0x99 3 YADDR
INIT_INS(STA,XADDR,0x9d);	//STA $xxxx, X 0x9d 3 XADDR
INIT_INS(STX,ZPADDR,0x86);	//STX $xx 0x86 2 ZPADDR
INIT_INS(STX,ADDR,0x8e);	//STX $xxxx 0x8e 3 ADDR
INIT_INS(STX,YZPADDR,0x96);	//STX $xx, Y 0x96 2 YZPADDR
INIT_INS(STY,ZPADDR,0x84);	//STY $xx 0x84 2 ZPADDR
INIT_INS(STY,ADDR,0x8c);	//STY $xxxx 0x8c 3 ADDR
INIT_INS(STY,XZPADDR,0x94);	//STY $xx, X 0x94 2 XZPADDR
INIT_INS(TAX,NONE,0xaa);	//TAX  0xaa 1 
INIT_INS(TXA,NONE,0x8a);	//TXA  0x8a 1 
INIT_INS(TAY,NONE,0xa8);	//TAY  0xa8 1 
INIT_INS(TYA,NONE,0x98);	//TYA  0x98 1 
INIT_INS(TSX,NONE,0xba);	//TSX  0xba 1 
INIT_INS(TXS,NONE,0x9a);	//TXS  0x9a 1 
INIT_INS(ADC,XIDIRADDR,0x61);	//ADC ($xx, X) 0x61 2 XIDIRADDR
INIT_INS(ADC,ZPADDR,0x65);	//ADC $xx 0x65 2 ZPADDR
INIT_INS(ADC,BYTE,0x69);	//ADC #$xx 0x69 2 BYTE
INIT_INS(ADC,ADDR,0x6d);	//ADC $xxxx 0x6d 3 ADDR
INIT_INS(ADC,YIDIRADDR,0x71);	//ADC ($xx), Y 0x71 2 YIDIRADDR
INIT_INS(ADC,XZPADDR,0x75);	//ADC $xx, X 0x75 2 XZPADDR
INIT_INS(ADC,YADDR,0x79);	//ADC $xxxx, Y 0x79 3 YADDR
INIT_INS(ADC,XADDR,0x7d);	//ADC $xxxx, X 0x7d 3 XADDR
INIT_INS(SBC,XIDIRADDR,0xe1);	//SBC ($xx, X) 0xe1 2 XIDIRADDR
INIT_INS(SBC,ZPADDR,0xe5);	//SBC $xx 0xe5 2 ZPADDR
INIT_INS(SBC,BYTE,0xe9);	//SBC #$xx 0xe9 2 BYTE
INIT_INS(SBC,ADDR,0xed);	//SBC $xxxx 0xed 3 ADDR
INIT_INS(SBC,YIDIRADDR,0xf1);	//SBC ($xx), Y 0xf1 2 YIDIRADDR
INIT_INS(SBC,XZPADDR,0xf5);	//SBC $xx, X 0xf5 2 XZPADDR
INIT_INS(SBC,YADDR,0xf9);	//SBC $xxxx, Y 0xf9 3 YADDR
INIT_INS(SBC,XADDR,0xfd);	//SBC $xxxx, X 0xfd 3 XADDR
INIT_INS(INC,ZPADDR,0xe6);	//INC $xx 0xe6 2 ZPADDR
INIT_INS(INC,ADDR,0xee);	//INC $xxxx 0xee 3 ADDR
INIT_INS(INC,XZPADDR,0xf6);	//INC $xx, X 0xf6 2 XZPADDR
INIT_INS(INC,XADDR,0xfe);	//INC $xxxx, X 0xfe 3 XADDR
INIT_INS(DEC,ZPADDR,0xc6);	//DEC $xx 0xc6 2 ZPADDR
INIT_INS(DEC,ADDR,0xce);	//DEC $xxxx 0xce 3 ADDR
INIT_INS(DEC,XZPADDR,0xd6);	//DEC $xx, X 0xd6 2 XZPADDR
INIT_INS(DEC,XADDR,0xde);	//DEC $xxxx, X 0xde 3 XADDR
INIT_INS(INX,NONE,0xe8);	//INX  0xe8 1 
INIT_INS(DEX,NONE,0xca);	//DEX  0xca 1 
INIT_INS(INY,NONE,0xc8);	//INY  0xc8 1 
INIT_INS(DEY,NONE,0x88);	//DEY  0x88 1 
INIT_INS(AND,XIDIRADDR,0x21);	//AND ($xx, X) 0x21 2 XIDIRADDR
INIT_INS(AND,ZPADDR,0x25);	//AND $xx 0x25 2 ZPADDR
INIT_INS(AND,BYTE,0x29);	//AND #$xx 0x29 2 BYTE
INIT_INS(AND,ADDR,0x2d);	//AND $xxxx 0x2d 3 ADDR
INIT_INS(AND,YIDIRADDR,0x31);	//AND ($xx), Y 0x31 2 YIDIRADDR
INIT_INS(AND,XZPADDR,0x35);	//AND $xx, X 0x35 2 XZPADDR
INIT_INS(AND,YADDR,0x39);	//AND $xxxx, Y 0x39 3 YADDR
INIT_INS(AND,XADDR,0x3d);	//AND $xxxx, X 0x3d 3 XADDR
INIT_INS(ORA,XIDIRADDR,0x01);	//ORA ($xx, X) 0x01 2 XIDIRADDR
INIT_INS(ORA,ZPADDR,0x05);	//ORA $xx 0x05 2 ZPADDR
INIT_INS(ORA,BYTE,0x09);	//ORA #$xx 0x09 2 BYTE
INIT_INS(ORA,ADDR,0x0d);	//ORA $xxxx 0x0d 3 ADDR
INIT_INS(ORA,YIDIRADDR,0x11);	//ORA ($xx), Y 0x11 2 YIDIRADDR
INIT_INS(ORA,XZPADDR,0x15);	//ORA $xx, X 0x15 2 XZPADDR
INIT_INS(ORA,YADDR,0x19);	//ORA $xxxx, Y 0x19 3 YADDR
INIT_INS(ORA,XADDR,0x1d);	//ORA $xxxx, X 0x1d 3 XADDR
INIT_INS(EOR,XIDIRADDR,0x41);	//EOR ($xx, X) 0x41 2 XIDIRADDR
INIT_INS(EOR,ZPADDR,0x45);	//EOR $xx 0x45 2 ZPADDR
INIT_INS(EOR,BYTE,0x49);	//EOR #$xx 0x49 2 BYTE
INIT_INS(EOR,ADDR,0x4d);	//EOR $xxxx 0x4d 3 ADDR
INIT_INS(EOR,YIDIRADDR,0x51);	//EOR ($xx), Y 0x51 2 YIDIRADDR
INIT_INS(EOR,XZPADDR,0x55);	//EOR $xx, X 0x55 2 XZPADDR
INIT_INS(EOR,YADDR,0x59);	//EOR $xxxx, Y 0x59 3 YADDR
INIT_INS(EOR,XADDR,0x5d);	//EOR $xxxx, X 0x5d 3 XADDR
INIT_INS(CLC,NONE,0x18);	//CLC  0x18 1 
INIT_INS(SEC,NONE,0x38);	//SEC  0x38 1 
INIT_INS(CLD,NONE,0xd8);	//CLD  0xd8 1 
INIT_INS(SED,NONE,0xf8);	//SED  0xf8 1 
INIT_INS(CLV,NONE,0xb8);	//CLV  0xb8 1 
INIT_INS(CLI,NONE,0x58);	//CLI  0x58 1 
INIT_INS(SEI,NONE,0x78);	//SEI  0x78 1 
INIT_INS(CMP,XIDIRADDR,0xc1);	//CMP ($xx, X) 0xc1 2 XIDIRADDR
INIT_INS(CMP,ZPADDR,0xc5);	//CMP $xx 0xc5 2 ZPADDR
INIT_INS(CMP,BYTE,0xc9);	//CMP #$xx 0xc9 2 BYTE
INIT_INS(CMP,ADDR,0xcd);	//CMP $xxxx 0xcd 3 ADDR
INIT_INS(CMP,YIDIRADDR,0xd1);	//CMP ($xx), Y 0xd1 2 YIDIRADDR
INIT_INS(CMP,XZPADDR,0xd5);	//CMP $xx, X 0xd5 2 XZPADDR
INIT_INS(CMP,YADDR,0xd9);	//CMP $xxxx, Y 0xd9 3 YADDR
INIT_INS(CMP,XADDR,0xdd);	//CMP $xxxx, X 0xdd 3 XADDR
INIT_INS(CPX,BYTE,0xe0);	//CPX #$xx 0xe0 2 BYTE
INIT_INS(CPX,ZPADDR,0xe4);	//CPX $xx 0xe4 2 ZPADDR
INIT_INS(CPX,ADDR,0xec);	//CPX $xxxx 0xec 3 ADDR
INIT_INS(CPY,BYTE,0xc0);	//CPY #$xx 0xc0 2 BYTE
INIT_INS(CPY,ZPADDR,0xc4);	//CPY $xx 0xc4 2 ZPADDR
INIT_INS(CPY,ADDR,0xcc);	//CPY $xxxx 0xcc 3 ADDR
INIT_INS(BIT,ZPADDR,0x24);	//BIT $xx 0x24 2 ZPADDR
INIT_INS(BIT,ADDR,0x2c);	//BIT $xxxx 0x2c 3 ADDR
INIT_INS(ASL,NONE,0x0a);	//ASL  0x0a 1 
INIT_INS(ASL,ZPADDR,0x06);	//ASL $xx 0x06 2 ZPADDR
INIT_INS(ASL,ADDR,0x0e);	//ASL $xxxx 0x0e 3 ADDR
INIT_INS(ASL,XZPADDR,0x16);	//ASL $xx, X 0x16 2 XZPADDR
INIT_INS(ASL,XADDR,0x1e);	//ASL $xxxx, X 0x1e 3 XADDR
INIT_INS(LSR,NONE,0x4a);	//LSR  0x4a 1 
INIT_INS(LSR,ZPADDR,0x46);	//LSR $xx 0x46 2 ZPADDR
INIT_INS(LSR,ADDR,0x4e);	//LSR $xxxx 0x4e 3 ADDR
INIT_INS(LSR,XZPADDR,0x56);	//LSR $xx, X 0x56 2 XZPADDR
INIT_INS(LSR,XADDR,0x5e);	//LSR $xxxx, X 0x5e 3 XADDR
INIT_INS(ROL,NONE,0x2a);	//ROL  0x2a 1 
INIT_INS(ROL,ZPADDR,0x26);	//ROL $xx 0x26 2 ZPADDR
INIT_INS(ROL,ADDR,0x2e);	//ROL $xxxx 0x2e 3 ADDR
INIT_INS(ROL,XZPADDR,0x36);	//ROL $xx, X 0x36 2 XZPADDR
INIT_INS(ROL,XADDR,0x3e);	//ROL $xxxx, X 0x3e 3 XADDR
INIT_INS(ROR,NONE,0x6a);	//ROR  0x6a 1 
INIT_INS(ROR,ZPADDR,0x66);	//ROR $xx 0x66 2 ZPADDR
INIT_INS(ROR,ADDR,0x6e);	//ROR $xxxx 0x6e 3 ADDR
INIT_INS(ROR,XZPADDR,0x76);	//ROR $xx, X 0x76 2 XZPADDR
INIT_INS(ROR,XADDR,0x7e);	//ROR $xxxx, X 0x7e 3 XADDR
INIT_INS(PHA,NONE,0x48);	//PHA  0x48 1 
INIT_INS(PLA,NONE,0x68);	//PLA  0x68 1 
INIT_INS(PHP,NONE,0x08);	//PHP  0x08 1 
INIT_INS(PLP,NONE,0x28);	//PLP  0x28 1 
INIT_INS(JMP,ADDR,0x4c);	//JMP $xxxx 0x4c 3 ADDR
INIT_INS(JMP,IDIRADDR,0x6c);	//JMP ($xxxx) 0x6c 3 IDIRADDR
INIT_INS(BEQ,READDR,0xf0);	//BEQ $xxxx 0xf0 2 READDR
INIT_INS(BNE,READDR,0xd0);	//BNE $xxxx 0xd0 2 READDR
INIT_INS(BCS,READDR,0xb0);	//BCS $xxxx 0xb0 2 READDR
INIT_INS(BCC,READDR,0x90);	//BCC $xxxx 0x90 2 READDR
INIT_INS(BMI,READDR,0x30);	//BMI $xxxx 0x30 2 READDR
INIT_INS(BPL,READDR,0x10);	//BPL $xxxx 0x10 2 READDR
INIT_INS(BVS,READDR,0x70);	//BVS $xxxx 0x70 2 READDR
INIT_INS(BVC,READDR,0x50);	//BVC $xxxx 0x50 2 READDR
INIT_INS(JSR,ADDR,0x20);	//JSR $xxxx 0x20 3 ADDR
INIT_INS(RTS,NONE,0x60);	//RTS  0x60 1 
INIT_INS(INT,ADDR,0x00);	//INT $xxxx 0x00 1 ADDR
INIT_INS(NOP,NONE,0xea);	//NOP  0xea 1 
INIT_INS(RTI,NONE,0x40);	//RTI  0x40 1 
INIT_INS(BRK,NONE,0x00);	//BRK  0x00 1 
/* END: Gen by geninstable.py */
